GET_NEXT_LINE
Si occupa di leggere dal file descriptor una linea alla volta e copiarla su **line, restituendo alla chiamante un valore di ritorno relativo che può essere di errore o no.

La funzione deve riuscire a funzionare con una sola variabile statica e leggere file diversi ad ogni sua chiamata: per far ciò ricorriamo alla dichiarazione di un vettore di puntatori di tipo stringa in static, ciò ci permetterà di poter riutilizzare il valore salvatovi anche dopo la fine della funzione (una variabile static ha inoltre la peculiarità di essere nota solo al file in cui viene dichiarata).

Il valore BUFFER_SIZE che viene dichiarato in fase di pre-compilazione viene usata per leggere un certo numero di caratteri della riga per volta, e non tutta la riga. Ciò ci  permette di sapere quando effettivamente dobbiamo terminare l'esecuzione. (Se troviamo un carattere end-line o EOF).

I valori di ritorno possono essere:
- 1 se é stata letta una linea;
- 0 se abbiamo incontrato EOF;
- -1 se si é verificato un qualunque tipo di errore;

P.S.: una volta letta la riga, il carattere end-line deve essere sostituito nella copia dal carattere terminatore. Sarà poi l'utente ad occuparsi di mandare a capo ad ogni lettura.

ANALISI
Per prima cosa, il nostro programma dovrà controllare che i dati in input siano sorretti:
- fd deve essere un valore compreso tra 0 e 255;
- BUFF_SIZE deve essere un valore maggiore a 0;
- line deve esistere.
Nel caso in cui una delle condizioni sia falsa, il programma termina e restituisce il valore di errore (-1).

Ora dobbiamo occuparci di leggere la riga del file: 
- la stringa di destinazione deve essere abbastanza grande da poter contenere la riga da leggere (malloc di BUFF_SIZE + 1 (\0)).
- successivamente leggo una quantità BUFF_SIZE della riga da fd e li vado a scrivere sul puntatore a stringa con lo spazio opportunamente allocato e vado a mettere il carattere sterminatore sul fondo della stringa
- infine aggiorno la lettura della linea tramite unione della linea precedentemente letta e la linea letta.
- ripeto questa azione finché leggo la stessa lunghezza di caratteri (return value di read) di  BUFF_SIZE (perché altrimenti incontrerei EOF) oppure se ho copiato un end-line. 
- il ritorno della funzione sarà lo stesso della funzione read.

Per il ritorno della della funzione GNL, dobbiamo 